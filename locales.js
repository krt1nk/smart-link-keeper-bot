// locales.js - –Ø–∑—ã–∫–æ–≤—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã

const locales = {
    en: {
      start: {
        greeting: (name) => `üëã Hello, ${name}!\n\nI'm your personal smart link keeper.\n\nüìé Send a link:\n‚Ä¢ Just a URL: https://example.com\n‚Ä¢ URL with a note: https://example.com\nMy note about something important\n\nüîç To search, just write a query:\n"Find videos about cooking"\n"AI from Google"\n\nüìä /stats ‚Äî your link statistics\nüåê /language ‚Äî change language\n\nüîí All your links are private, only you can see them.`
      },
      stats: {
        title: 'üìä Your Statistics:\n\n',
        total: (count) => `üîó Total links: ${count}\n\n`,
        categories: 'üìÇ By categories:\n',
        category: (name, count) => `   ‚Ä¢ ${name}: ${count}\n`,
        empty: 'üìä You don\'t have any saved links yet.\n\nSend me any link to start!'
      },
      link: {
        processing: '‚è≥ Loading and analyzing the page...',
        saved: '‚úÖ Link saved!\n\n',
        title: (title) => `üìå ${title}\n\n`,
        category: (cat) => `üè∑ Category: ${cat}\n\n`,
        tags: 'üîñ Tags:\n',
        yourNote: (note) => `\n\nüìù Your note:\n${note}`,
        error: '‚ùå Error processing link. Please try again.'
      },
      search: {
        searching: 'üîç Searching for your query...',
        found: 'üéØ Found:\n\n',
        result: (i, cat, title, tags, url) => 
          `${i + 1}. [${(cat || 'other').toUpperCase()}] ${title || 'Untitled'}\nüè∑ ${tags || 'no tags'}\nüîó ${url}`,
        withNote: (note) => `\nüìù ${note}`,
        notFound: 'üòï Nothing found. Try changing your query.',
        error: '‚ùå Search error.'
      },
      language: {
        select: 'üåê Select language / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:',
        changed: (lang) => `‚úÖ Language changed to ${lang === 'en' ? 'English' : '–†—É—Å—Å–∫–∏–π'}!`
      },
      errors: {
        stats: '‚ùå Error retrieving statistics',
        database: '‚ùå Database error'
      }
    },
    ru: {
      start: {
        greeting: (name) => `üëã –ü—Ä–∏–≤–µ—Ç, ${name}!\n\n–Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —É–º–Ω—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —Å—Å—ã–ª–æ–∫.\n\nüìé –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É:\n‚Ä¢ –ü—Ä–æ—Å—Ç–æ —Å—Å—ã–ª–∫—É: https://example.com\n‚Ä¢ –°—Å—ã–ª–∫—É —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º: https://example.com\n–ú–æ—è –∑–∞–º–µ—Ç–∫–∞ –æ —á—ë–º-—Ç–æ –≤–∞–∂–Ω–æ–º\n\nüîç –î–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –∑–∞–ø—Ä–æ—Å:\n"–ù–∞–π–¥–∏ –≤–∏–¥–µ–æ –ø—Ä–æ –≥–æ—Ç–æ–≤–∫—É"\n"AI –æ—Ç Google"\n\nüìä /stats ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–≤–æ–∏—Ö —Å—Å—ã–ª–æ–∫\nüåê /language ‚Äî —Å–º–µ–Ω–∏—Ç—å —è–∑—ã–∫\n\nüîí –í—Å–µ —Ç–≤–æ–∏ —Å—Å—ã–ª–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ, —Ç–æ–ª—å–∫–æ —Ç—ã –∏—Ö –≤–∏–¥–∏—à—å.`
      },
      stats: {
        title: 'üìä –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n',
        total: (count) => `üîó –í—Å–µ–≥–æ —Å—Å—ã–ª–æ–∫: ${count}\n\n`,
        categories: 'üìÇ –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:\n',
        category: (name, count) => `   ‚Ä¢ ${name}: ${count}\n`,
        empty: 'üìä –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫.\n\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ª—é–±—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞!'
      },
      link: {
        processing: '‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...',
        saved: '‚úÖ –°—Å—ã–ª–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!\n\n',
        title: (title) => `üìå ${title}\n\n`,
        category: (cat) => `üè∑ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${cat}\n\n`,
        tags: 'üîñ –¢–µ–≥–∏:\n',
        yourNote: (note) => `\n\nüìù –¢–≤–æ—è –∑–∞–º–µ—Ç–∫–∞:\n${note}`,
        error: '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.'
      },
      search: {
        searching: 'üîç –ò—â—É –ø–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É...',
        found: 'üéØ –ù–∞–π–¥–µ–Ω–æ:\n\n',
        result: (i, cat, title, tags, url) => 
          `${i + 1}. [${(cat || '–¥—Ä—É–≥–æ–µ').toUpperCase()}] ${title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\nüè∑ ${tags || '–Ω–µ—Ç —Ç–µ–≥–æ–≤'}\nüîó ${url}`,
        withNote: (note) => `\nüìù ${note}`,
        notFound: 'üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.',
        error: '‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞.'
      },
      language: {
        select: 'üåê Select language / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:',
        changed: (lang) => `‚úÖ –Ø–∑—ã–∫ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ ${lang === 'en' ? 'English' : '–†—É—Å—Å–∫–∏–π'}!`
      },
      errors: {
        stats: '‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏',
        database: '‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö'
      }
    }
  };
  
  // –ü–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  function t(userId, key, ...args) {
    const userLang = getUserLanguage(userId);
    const keys = key.split('.');
    let value = locales[userLang];
    
    for (const k of keys) {
      value = value?.[k];
    }
    
    if (typeof value === 'function') {
      return value(...args);
    }
    
    return value || key;
  }
  
  // –•—Ä–∞–Ω–∏–ª–∏—â–µ —è–∑—ã–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ë–î)
  const userLanguages = new Map();
  
  function getUserLanguage(userId) {
    return userLanguages.get(userId) || 'en';
  }
  
  function setUserLanguage(userId, lang) {
    userLanguages.set(userId, lang);
  }
  
  module.exports = {
    t,
    getUserLanguage,
    setUserLanguage,
    locales
  };